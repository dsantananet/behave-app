interface FireType {
  void null();
};

interface Crown {
  double getFinalFlameLength(LengthUnits_LengthUnitsEnum flameLengthUnits);
  void setFuelModelNumber(long fuelModelNumber);
  double getSurfaceFireSpreadRate(SpeedUnits_SpeedUnitsEnum spreadRateUnits);
  void setWindAdjustmentFactorCalculationMethod(WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum windAdjustmentFactorCalculationMethod);
  double getMoistureHundredHour(MoistureUnits_MoistureUnitsEnum moistureUnits);
  void updateCrownInputs(long fuelModelNumber, double moistureOneHour, double moistureTenHour, double moistureHundredHour, double moistureLiveHerbaceous, double moistureLiveWoody, double moistureFoliar, MoistureUnits_MoistureUnitsEnum moistureUnits, double windSpeed, SpeedUnits_SpeedUnitsEnum windSpeedUnits, WindHeightInputMode_WindHeightInputModeEnum windHeightInputMode, double windDirection, WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum windAndSpreadOrientationMode, double slope, SlopeUnits_SlopeUnitsEnum slopeUnits, double aspect, double canopyCover, CoverUnits_CoverUnitsEnum coverUnits, double canopyHeight, double canopyBaseHeight, LengthUnits_LengthUnitsEnum canopyHeightUnits, double crownRatio, double canopyBulkDensity, DensityUnits_DensityUnitsEnum densityUnits);
  long getFuelModelNumber();
  void setWindHeightInputMode(WindHeightInputMode_WindHeightInputModeEnum windHeightInputMode);
  void updateCrownsSurfaceInputs(long fuelModelNumber, double moistureOneHour, double moistureTenHour, double moistureHundredHour, double moistureLiveHerbaceous, double moistureLiveWoody, MoistureUnits_MoistureUnitsEnum moistureUnits, double windSpeed, SpeedUnits_SpeedUnitsEnum windSpeedUnits, WindHeightInputMode_WindHeightInputModeEnum windHeightInputMode, double windDirection, WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum windAndSpreadOrientationMode, double slope, SlopeUnits_SlopeUnitsEnum slopeUnits, double aspect, double canopyCover, CoverUnits_CoverUnitsEnum coverUnits, double canopyHeight, LengthUnits_LengthUnitsEnum canopyHeightUnits, double crownRatio);
  void doCrownRunScottAndReinhardt();
  double getWindDirection();
  void setMoistureOneHour(double moistureOneHour, MoistureUnits_MoistureUnitsEnum moistureUnits);
  void setSlope(double slope, SlopeUnits_SlopeUnitsEnum slopeUnits);
  void setCanopyHeight(double canopyHeight, LengthUnits_LengthUnitsEnum canopyHeightUnits);
  double getMoistureLiveWoody(MoistureUnits_MoistureUnitsEnum moistureUnits);
  double getCrownFirelineIntensity();
  double getFinalHeatPerUnitArea();
  void setCanopyBulkDensity(double canopyBulkDensity, DensityUnits_DensityUnitsEnum densityUnits);
  double getWindSpeed(SpeedUnits_SpeedUnitsEnum windSpeedUnits, WindHeightInputMode_WindHeightInputModeEnum windHeightInputMode);
  void setMoistureTenHour(double moistureTenHour, MoistureUnits_MoistureUnitsEnum moistureUnits);
  void setCanopyBaseHeight(double canopyBaseHeight, LengthUnits_LengthUnitsEnum canopyHeightUnits);
  FireType_FireTypeEnum getFireType();
  double getAspect();
  double getMoistureLiveHerbaceous(MoistureUnits_MoistureUnitsEnum moistureUnits);
  void setMoistureLiveHerbaceous(double moistureLiveHerbaceous, MoistureUnits_MoistureUnitsEnum moistureUnits);
  void setUserProvidedWindAdjustmentFactor(double userProvidedWindAdjustmentFactor);
  void setWindDirection(double windDirection);
  void setWindAndSpreadOrientationMode(WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum windAndSpreadAngleMode);
  void setAspect(double aspect);
  double getCrownFireSpreadRate(SpeedUnits_SpeedUnitsEnum spreadRateUnits);
  void setMoistureHundredHour(double moistureHundredHour, MoistureUnits_MoistureUnitsEnum moistureUnits);
  double getCanopyBulkDensity(DensityUnits_DensityUnitsEnum canopyBulkDensityUnits);
  double getFinalSpreadRate(SpeedUnits_SpeedUnitsEnum spreadRateUnits);
  void setCrownRatio(double crownRatio);
  void initializeMembers();
  double getSlope(SlopeUnits_SlopeUnitsEnum slopeUnits);
  double getCriticalOpenWindSpeed(SpeedUnits_SpeedUnitsEnum speedUnits);
  void setMoistureLiveWoody(double moistureLiveWoody, MoistureUnits_MoistureUnitsEnum moistureUnits);
  void doCrownRunRothermel();
  double getCrownRatio();
  double getCanopyBaseHeight(LengthUnits_LengthUnitsEnum canopyHeightUnits);
  double getCanopyHeight(LengthUnits_LengthUnitsEnum canopyHeighUnits);
  void setCanopyCover(double canopyCover, CoverUnits_CoverUnitsEnum coverUnits);
  double getFinalFirelineIntesity(FirelineIntensityUnits_FirelineIntensityUnitsEnum firelineIntensityUnits);
  double getMoistureFoliar(MoistureUnits_MoistureUnitsEnum moistureUnits);
  void setWindSpeed(double windSpeed, SpeedUnits_SpeedUnitsEnum windSpeedUnits, WindHeightInputMode_WindHeightInputModeEnum windHeightInputMode);
  double getMoistureOneHour(MoistureUnits_MoistureUnitsEnum moistureUnits);
  void setMoistureFoliar(double foliarMoisture, MoistureUnits_MoistureUnitsEnum moistureUnits);
  double getMoistureTenHour(MoistureUnits_MoistureUnitsEnum moistureUnits);
  double getCrownFireLengthToWidthRatio();
  double getCrownFlameLength(LengthUnits_LengthUnitsEnum flameLengthUnits);
  void setFuelModelSet(FuelModelSet fuelModelSet);
  double getCanopyCover(CoverUnits_CoverUnitsEnum canopyCoverUnits);
};
