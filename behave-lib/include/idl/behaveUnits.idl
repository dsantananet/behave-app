interface SlopeUnits {

  double toBaseUnits(double value, SlopeUnits_SlopeUnitsEnum units);
  double fromBaseUnits(double value, SlopeUnits_SlopeUnitsEnum units);
};

enum CoverUnits_CoverUnitsEnum {
  "CoverUnits::Fraction", "CoverUnits::Percent"
};

interface CoverUnits {
  double toBaseUnits(double value, CoverUnits_CoverUnits_CoverUnits_CoverUnitsEnum units);
  double fromBaseUnits(double value, CoverUnits_CoverUnits_CoverUnits_CoverUnitsEnum units);
};

enum HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum {
  "HeatSourceAndReactionIntensityUnits::BtusPerSquareFootPerMinute",
  "HeatSourceAndReactionIntensityUnits::BtusPerSquareFootPerSecond",
  "HeatSourceAndReactionIntensityUnits::KilojoulesPerSquareMeterPerSecond",
  "HeatSourceAndReactionIntensityUnits::KilojoulesPerSquareMeterPerMinute",
  "HeatSourceAndReactionIntensityUnits::KilowattsPerSquareMeter"
};

interface HeatSourceAndReactionIntensityUnits {
  double toBaseUnits(double value, HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum units);
  double fromBaseUnits(double value, HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum units);
};

enum LoadingUnits_LoadingUnitsEnum {

};

interface LoadingUnits {
  double toBaseUnits(double value, LoadingUnits_LoadingUnitsEnum units);
  double fromBaseUnits(double value, LoadingUnits_LoadingUnitsEnum units);
};

enum HeatSinkUnits_HeatSinkUnitsEnum {

};

interface HeatSinkUnits {

  double toBaseUnits(double value, HeatSinkUnits_HeatSinkUnitsEnum units);
  double fromBaseUnits(double value, HeatSinkUnits_HeatSinkUnitsEnum units);
};

enum TemperatureUnits_TemperatureUnitsEnum {

};

interface TemperatureUnits {

  double toBaseUnits(double value, TemperatureUnits_TemperatureUnitsEnum units);
  double fromBaseUnits(double value, TemperatureUnits_TemperatureUnitsEnum units);
};

enum MoistureUnits_MoistureUnitsEnum {

};

interface MoistureUnits {

  double toBaseUnits(double value, MoistureUnits_MoistureUnitsEnum units);
  double fromBaseUnits(double value, MoistureUnits_MoistureUnitsEnum units);
};

enum TimeUnits_TimeUnitsEnum {

};

interface TimeUnits {

  double toBaseUnits(double value, TimeUnits_TimeUnitsEnum units);
  double fromBaseUnits(double value, TimeUnits_TimeUnitsEnum units);
};

enum AreaUnits_AreaUnitsEnum {

};

interface AreaUnits {

  double toBaseUnits(double value, AreaUnits_AreaUnitsEnum units);
  double fromBaseUnits(double value, AreaUnits_AreaUnitsEnum units);
};

enum SpeedUnits_SpeedUnitsEnum {

};

interface SpeedUnits {

  double toBaseUnits(double value, SpeedUnits_SpeedUnitsEnum units);
  double fromBaseUnits(double value, SpeedUnits_SpeedUnitsEnum units);
};

enum FirelineIntensityUnits_FirelineIntensityUnitsEnum {

};

interface FirelineIntensityUnits {
  double toBaseUnits(double value, FirelineIntensityUnits_FirelineIntensityUnitsEnum units);
  double fromBaseUnits(double value, FirelineIntensityUnits_FirelineIntensityUnitsEnum units);
};

enum HeatOfCombustionUnits_HeatOfCombustionUnitsEnum {

};

interface HeatOfCombustionUnits {
  double toBaseUnits(double value, HeatOfCombustionUnits_HeatOfCombustionUnitsEnum units);
  double fromBaseUnits(double value, HeatOfCombustionUnits_HeatOfCombustionUnitsEnum units);
};

enum HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum {

};

interface HeatPerUnitAreaUnits {
  double toBaseUnits(double value, HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum units);
  double fromBaseUnits(double value, HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum units);
};

enum LengthUnits_LengthUnitsEnum {

};

interface LengthUnits {
  double toBaseUnits(double value, LengthUnits_LengthUnitsEnum units);
  double fromBaseUnits(double value, LengthUnits_LengthUnitsEnum units);
};

enum DensityUnits_DensityUnitsEnum {

};

interface DensityUnits {
  double toBaseUnits(double value, DensityUnits_DensityUnitsEnum units);
  double fromBaseUnits(double value, DensityUnits_DensityUnitsEnum units);
};

enum ProbabilityUnits_ProbabilityUnitsEnum {

};

interface ProbabilityUnits {
  double toBaseUnits(double value, ProbabilityUnits_ProbabilityUnitsEnum units);
  double fromBaseUnits(double value, ProbabilityUnits_ProbabilityUnitsEnum units);
};

enum SurfaceAreaUnits_SurfaceAreaUnitsEnum {

};

interface SurfaceAreaToVolumeUnits {
  double toBaseUnits(double value, SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum units);
  double fromBaseUnits(double value, SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum units);
};
