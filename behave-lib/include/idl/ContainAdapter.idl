interface ContainAdapter {
  ContainStatus_ContainStatusEnum getContainmentStatus();
  double getFinalContainmentArea(AreaUnits_AreaUnitsEnum areaUnits);
  double getFinalCost();
  double getFinalFireLineLength(LengthUnits_LengthUnitsEnum lengthUnits);
  double getFinalFireSize(AreaUnits_AreaUnitsEnum areaUnits);
  double getFinalTimeSinceReport(TimeUnits_TimeUnitsEnum timeUnits);
  double getFireSizeAtInitialAttack(AreaUnits_AreaUnitsEnum areaUnits);
  double getPerimeterAtContainment(LengthUnits_LengthUnitsEnum lengthUnits);
  double getPerimeterAtInitialAttack(LengthUnits_LengthUnitsEnum lengthUnits);
  long removeAllResourcesWithThisDesc(string desc);
  long removeResourceAt(long index);
  long removeResourceWithThisDesc(string desc);
  void ContainAdapter();
  void addResource(double arrival, double duration, TimeUnits_TimeUnitsEnum timeUnit, double productionRate, SpeedUnits_SpeedUnitsEnum productionRateUnits, std_string description, double baseCost, double hourCost);
  void doContainRun();
  void removeAllResources();
  void setAttackDistance(double attackDistance, LengthUnits_LengthUnitsEnum lengthUnits);
  void setFireStartTime(long fireStartTime);
  void setLwRatio(double lwRatio);
  void setMaxFireSize(long maxFireSize);
  void setMaxFireTime(long maxFireTime);
  void setMaxSteps(long maxSteps);
  void setMinSteps(long minSteps);
  void setReportRate(double reportRate, SpeedUnits_SpeedUnitsEnum speedUnits);
  void setReportSize(double reportSize, AreaUnits_AreaUnitsEnum areaUnits);
  void setRetry(boolean retry);
  void setTactic(ContainAdapterEnums_ContainTactic_ContainTacticEnum tactic);
};
