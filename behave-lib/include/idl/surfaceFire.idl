interface SurfaceFire {
  void SurfaceFire(FuelModelSet fuelModelSet, SurfaceInputs surfaceInputs, FireSize size);
  boolean getIsWindLimitExceeded();
  double calculateFlameLength(double firelineIntensity);
  double calculateForwardSpreadRate(long fuelModelNumber, boolean hasDirectionOfInterest, double directionOfInterest);
  double calculateNoWindNoSlopeSpreadRate(double reactionIntensity, double propagatingFlux, double heatSink);
  double calculateSpreadRateAtVector(double directionOfInterest);
  double getBulkDensity();
  double getDirectionOfMaxSpread();
  double getEffectiveWindSpeed();
  double getFireEccentricity();
  double getFireLengthToWidthRatio();
  double getFirelineIntensity();
  double getFlameLength();
  double getFuelbedDepth();
  double getHeatPerUnitArea();
  double getHeatSink(HeatSinkUnits_HeatSinkUnitsEnum heatSinkUnits);
  double getMaxFlameLength();
  double getMidflameWindSpeed();
  double getReactionIntensity(HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum reactiontionIntensityUnits);
  double getResidenceTime();
  double getSlopeFactor();
  double getSpreadRate();
  double getSpreadRateInDirectionOfInterest();
  double getWindAdjustmentFactor();
  double getWindSpeedLimit();
  void calculateMidflameWindSpeed();
  void initializeMembers();
  void skipCalculationForZeroLoad();
};
